setwd("~/R/ProgrammingAssignment2")
## makeCacheMatrix caches the inverse of a matrix
makeCacheMatrix <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setinverse <- function(solve) m <<- solve
getinverse <- function() m
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
## cacheSolve computes the inverse of the matrix
## returned by makeCacheMatrix
cacheSolve <- function(x, ...) {
m <- x$getinverse()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
x<-c(1,0,5,2,1,6,3,4,0)
cacheSolve(makeCacheMatrix(x))
x<-matrix(c(1,0,5,2,1,6,3,4,0), 3, 3)
x
cacheSolve(makeCacheMatrix(x))
